name: Release to PyPI

on:
  release:
    types: [published]
  workflow_dispatch:  # Allow manual trigger

permissions:
  contents: read

jobs:

  # Build wheels for different platforms
  build-wheels:
    name: Build wheels on Linux for Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.11', '3.12', '3.13']
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: x86_64
          args: --release --out dist --find-interpreter
          sccache: 'true'
          manylinux: auto
      
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.python-version }}
          path: dist
  
  # Build source distribution
  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist
  
  # Test PyPI upload (always runs on release)
  test-pypi-upload:
    name: Upload to Test PyPI
    needs: [build-wheels, build-sdist]
    runs-on: ubuntu-latest
    environment: testpypi
    permissions:
      id-token: write  # For trusted publishing
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
      
      - name: List artifacts
        run: ls -lR dist/
      
      - name: Publish to Test PyPI
        uses: PyO3/maturin-action@v1
        with:
          command: upload
          args: --skip-existing dist/*
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.TEST_PYPI_TOKEN }}
          MATURIN_REPOSITORY: testpypi
      
      - name: Wait for package to be available
        run: sleep 60
      
      - name: Test installation from Test PyPI
        run: |
          python -m pip install --upgrade pip
          pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ seer
          python -c "import seer; print('Successfully imported seer version:', seer.__version__)"
  
  # Production PyPI upload (only after successful Test PyPI)
  pypi-upload:
    name: Upload to PyPI
    needs: test-pypi-upload
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write  # For trusted publishing
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
      
      - name: List artifacts
        run: ls -lR dist/
      
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        with:
          command: upload
          args: --skip-existing dist/*
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
